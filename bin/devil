#!/usr/bin/env bash

clear

tput=$(which tput)
if [ -n "$tput" ]; then
    ncolors=$($tput colors)
fi
if [ -t 1 ] && [ -n "$ncolors" ] && [ "$ncolors" -ge 8 ]; then
  RED="$(tput setaf 1)"
  GREEN="$(tput setaf 2)"
  YELLOW="$(tput setaf 3)"
  BLUE="$(tput setaf 4)"
  BOLD="$(tput bold)"
  NORMAL="$(tput sgr0)"
else
  RED=""
  GREEN=""
  YELLOW=""
  BLUE=""
  BOLD=""
  NORMAL=""
fi

#====================================
# Install Toolset
#====================================

if [ "install" = "$1" ]; then
  printf "${GREEN}"
  printf "========================================\n"
  printf "=     Installing the following...      =\n"
  printf "========================================\n"
  printf "\n"
  printf "1. Homebrew / Cask\n"
  printf "2. NodeJS\n"
  printf "3. Virtualbox\n"
  printf "4. Docker\n"
  printf "5. Docker Machine\n"
  printf "6. Docker Compose\n"
  printf "7. Intialize project folders\n"
  printf "${NORMAL}"

  printf "${RED}Installing Homebrew / Cask...${NORMAL}\n\n"

  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  brew install caskroom/cask/brew-cask

  printf "${RED}Installing NodeJS...${NORMAL}\n\n"
  brew install node

  printf "${RED}Installing Virtualbox...${NORMAL}\n\n"
  brew cask install virtualbox

  printf "\n"
  printf "${RED}Installing Docker Binary...${NORMAL}\n\n"
  curl -L https://get.docker.com/builds/Darwin/x86_64/docker-latest > $DEVIL/bin/docker
  chmod a+x $DEVIL/bin/docker

  printf "\n"
  printf "${RED}Installing Docker Machine...${NORMAL}\n\n"

  curl -L https://github.com/docker/machine/releases/download/v$DOCKER_MACHINE_VERSION/docker-machine_darwin-amd64 \
    > $DEVIL/bin/docker-machine
  chmod a+x $DEVIL/bin/docker-machine
  docker-machine create --driver virtualbox devil
  docker-machine env devil

  printf "\n"
  printf "${RED}Installing Docker Compose...${NORMAL}\n\n"

  curl -L https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-`uname -s`-`uname -m` \
    > $DEVIL/bin/docker-compose
  chmod a+x $DEVIL/bin/docker-compose

  printf "\n"
  printf "${RED}Setting up project folders...${NORMAL}\n\n"

  printf "$DEVIL_PROJECTS_FOLDER/sites\n"
  mkdir -p "$DEVIL_PROJECTS_FOLDER/sites"

fi

#====================================
# Docker Compose
#====================================
if [ "up" = "$1" ]; then

  # Make sure docker vm is running
  docker-machine start devil
  eval "$(docker-machine env devil)"

  DOCKER_IP_ADDRESS=$(docker-machine ip $(docker-machine active))

  docker-compose --file $DEVIL/docker-compose.yml --project-name devil up -d

  DOCKER_CONTAINERS=$(docker ps --format "{{.Names}}")

  printf "${RED}\n\nRunning containers: \n\n$DOCKER_CONTAINERS \n\nDon't forget to make sure your apps \
host names are added to your hosts file:${NORMAL}\n\n"
  printf "$DOCKER_IP_ADDRESS  [hostname]\n\n"
fi

#====================================
# Create new site
#====================================
if [ "new" = "$1" ]; then
  DOCKER_IP_ADDRESS=$(docker-machine ip $(docker-machine active))
  printf "Creating... $DEVIL_PROJECTS_FOLDER/sites/$2/$3\n"
  mkdir -p "$DEVIL_PROJECTS_FOLDER/sites/$2/$3"
  printf "${RED}\nInclude this in your /etc/hosts: \n\t$DOCKER_IP_ADDRESS  $3.$2\n\n${NORMAL}"
fi
